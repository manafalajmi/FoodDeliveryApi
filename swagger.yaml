---
swagger: "2.0"
info:
  description: "This is an API for DoorDash to communicate with Its restaurants"
  version: "1.0.0"
  title: "API for Doors that Dash"
  contact:
    email: "manaf.alajmi@gmail.com"
  license:
    name: "Gagandeep industries"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/Manaf-Corp/DoorDashAPI/1.0.0"
tags:
- name: "admin"
  description: "Admin access"
- name: "doordash"
  description: "Operations available to regular developers"
- name: "restaurant"
  description: "Operations that are available to the restaurant client"
- name: "customer"
  description: "Operations that are available to customers using the app"
schemes:
- "https"
paths:
  /restaurant:
    post:
      tags:
      - "doordash"
      summary: "creates a restaurant"
      description: "Add a restaurant to the database; requires restaurant model as\
        \ input\n"
      operationId: "createRestaurant"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Restaurant"
        description: "Restaurant Model"
        required: false
        schema:
          $ref: "#/definitions/restaurant"
      responses:
        201:
          description: "restaurant item created"
        400:
          description: "invalid input, object invalid and not created"
        409:
          description: "an item with the same properties already exists, restaurant\
            \ item not created"
  /restaurant/{restaurantID}:
    get:
      tags:
      - "restaurant"
      - "doordash"
      summary: "find a restaurant"
      description: "By passing in the restaurant ID you can get the information on\
        \ the restaurant\n"
      operationId: "searchForrestaurant"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "restaurant Id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/restaurant"
        404:
          description: "ID not found"
  /restaurant/{restaurantID}/address:
    put:
      tags:
      - "doordash"
      - "restaurant"
      summary: "updates customer adress"
      description: "update the customer address"
      operationId: "updateCustomerAddress"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "To update a customers address"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "updatedAddress"
        description: "This will be the updated customer address"
        required: false
        schema:
          $ref: "#/definitions/address"
      responses:
        200:
          description: "Address updated"
          schema:
            $ref: "#/definitions/address"
        404:
          description: "Restaurant not found"
        405:
          description: "Action is not allowed"
  /restaurant/{restaurantID}/menu:
    get:
      tags:
      - "restaurant"
      - "doordash"
      summary: "Gets all the menus"
      description: "By passing in the restaurant Id you can retrieve all of this restaurants\
        \ menus\n"
      operationId: "getAllMenu"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "restaurant Id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/menu"
        404:
          description: "ID not found"
    post:
      tags:
      - "doordash"
      - "restaurant"
      summary: "create a menu"
      description: "Create an order, by passing in restaurant ID, you can create a\
        \ menu for thge\n"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "menu"
        required: false
        schema:
          $ref: "#/definitions/menu"
      - name: "restaurantID"
        in: "path"
        description: "Id of the restaurant"
        required: true
        type: "integer"
        format: "int64"
      responses:
        201:
          description: "Menu created"
        404:
          description: "invalid input, object invalid"
        409:
          description: "an existing menu already exists"
  /restaurant/{restaurantID}/menu/{menuID}:
    get:
      tags:
      - "restaurant"
      - "doordash"
      summary: "Gets a Menu"
      description: "By passing in the restaurant and menu ID you can retrieve this\
        \ restaurants menu\n"
      operationId: "getMenu"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "restaurant Id"
        required: true
        type: "integer"
        format: "int64"
      - name: "menuID"
        in: "path"
        description: "menu Id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            $ref: "#/definitions/menu"
        404:
          description: "ID not found"
    post:
      tags:
      - "doordash"
      - "restaurant"
      summary: "Add a menu item"
      description: "Add a menu item to a menu\n"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "menuItem"
        required: true
        schema:
          $ref: "#/definitions/menuItem"
      - name: "restaurantID"
        in: "path"
        description: "Id of the restaurant"
        required: true
        type: "integer"
        format: "int64"
      - name: "menuID"
        in: "path"
        description: "Id of the restaurants menu"
        required: true
        type: "integer"
        format: "int64"
      responses:
        201:
          description: "added to menu item"
        404:
          description: "invalid input, object invalid"
        409:
          description: "an existing menu with this ID already exists"
    delete:
      tags:
      - "doordash"
      - "restaurant"
      summary: "Delete a menu"
      description: "Delete a menu"
      operationId: "deleteRestaurantMenu"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "To find restaurant"
        required: true
        type: "integer"
        format: "int64"
      - name: "menuID"
        in: "path"
        description: "To find the menu"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Menu deleted"
        404:
          description: "Menu not found"
        405:
          description: "Action is not allowed"
  /restaurant/{restaurantID}/menu/{menuID}/menuItem/{itemID}:
    put:
      tags:
      - "restaurant"
      - "doordash"
      summary: "updates menu item status"
      description: "Updates the status of a menu item, statuses consist of available,\
        \ out of stock, not available/hide"
      operationId: "updateMenuItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "To find restaurant"
        required: true
        type: "integer"
        format: "int64"
      - name: "menuID"
        in: "path"
        description: "To find the menu"
        required: true
        type: "integer"
        format: "int64"
      - name: "itemID"
        in: "path"
        description: "menu item ID"
        required: true
        type: "string"
      - name: "status"
        in: "query"
        description: "The updated status"
        required: true
        type: "string"
      responses:
        200:
          description: "item updated"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/menuItem"
        204:
          description: "Menu item not found"
        405:
          description: "Action is not allowed"
    delete:
      tags:
      - "doordash"
      - "restaurant"
      summary: "Delete a menu item"
      description: "Delete a menu item from the menu"
      operationId: "deleteRestaurantMenuItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "To find restaurant"
        required: true
        type: "integer"
        format: "int64"
      - name: "menuID"
        in: "path"
        description: "To find the menu"
        required: true
        type: "integer"
        format: "int64"
      - name: "itemID"
        in: "path"
        description: "menu item ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Menu item deleted"
        404:
          description: "Menu item not found"
        405:
          description: "Action is not allowed"
  /restaurant/{restaurantID}/order/{orderID}:
    get:
      tags:
      - "restaurant"
      - "doordash"
      summary: "Gets a restaurant order"
      description: "By passing in the restaurant and order ID you can retrieve the\
        \ order information\n"
      operationId: "getRestaurantOrder"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "restaurant Id"
        required: true
        type: "integer"
        format: "int64"
      - name: "orderID"
        in: "path"
        description: "order Id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/orderRestaurant"
        404:
          description: "Order was not found"
    put:
      tags:
      - "restaurant"
      - "doordash"
      summary: "allows the restaurant to update the status of an order"
      description: "Updates the status of the order statuses consist of Paid, Prepparing\
        \ food, Picked up, waiting for driver, Rejected, Accepted"
      operationId: "updateRestaurantOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "To find restaurant"
        required: true
        type: "integer"
        format: "int64"
      - name: "orderID"
        in: "path"
        description: "To find Order"
        required: true
        type: "integer"
        format: "int64"
      - name: "statusUpdate"
        in: "query"
        description: "Updates the status of the prder"
        required: true
        type: "string"
      responses:
        200:
          description: "item updated"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/orderRestaurant"
        404:
          description: "Order not found"
        405:
          description: "Action is not allowed"
  /restaurant/{restaurantID}/allOrders:
    get:
      tags:
      - "doordash"
      - "restaurant"
      summary: "Gets restaurant orders in a time frame"
      description: "By passing in the restaurant Id you can get a list of all active/pending\
        \ orders\n"
      operationId: "searchForAllRestaurantOrder"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "ID of the restaurant"
        required: true
        type: "integer"
        default: 12
        format: "int64"
      - name: "dateFrom"
        in: "query"
        description: "the date+time to pull orders from"
        required: true
        type: "string"
        format: "date-time"
      - name: "dateTO"
        in: "query"
        description: "the date+time to pull orders to"
        required: true
        type: "string"
        format: "date-time"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/orderRestaurant"
        404:
          description: "Orders not found"
  /customer:
    post:
      tags:
      - "doordash"
      - "customer"
      summary: "creates a customer"
      description: "By passing in the name of the restaurant\n"
      operationId: "createCustomer"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "customer"
        required: false
        schema:
          $ref: "#/definitions/customer"
      responses:
        201:
          description: "item created"
        404:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"
  /customer/{userID}:
    get:
      tags:
      - "doordash"
      - "customer"
      summary: "get"
      description: "By passing in the restaurant ID you can get the information on\
        \ the restaurant\n"
      operationId: "searchForCustomer"
      produces:
      - "application/json"
      parameters:
      - name: "userID"
        in: "path"
        description: "customer Id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/customer"
        404:
          description: "Customer not found"
    put:
      tags:
      - "doordash"
      summary: "updates customer information/ status/ is deleted"
      description: "update the saved customer information"
      operationId: "updateCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userID"
        in: "path"
        description: "To find a customer"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "customerObject"
        description: "This will be the updated customer object"
        required: false
        schema:
          $ref: "#/definitions/customer"
      responses:
        200:
          description: "customer updated"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/restaurant"
        404:
          description: "customer not found"
        405:
          description: "Action is not allowed"
  /customer/{userID}/Address/{addressID}:
    put:
      tags:
      - "doordash"
      - "customer"
      summary: "updates the restaurants address adress"
      description: "update the restaurant address"
      operationId: "updateRestaurantAddress"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userID"
        in: "path"
        description: "To update a customers address"
        required: true
        type: "integer"
        format: "int64"
      - name: "addressID"
        in: "path"
        description: "To find address"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "customerAddress"
        description: "This will be the updated customer address"
        required: false
        schema:
          $ref: "#/definitions/address"
      responses:
        200:
          description: "customer updated"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/address"
        404:
          description: "customer not found"
        405:
          description: "Action is not allowed"
    delete:
      tags:
      - "doordash"
      - "customer"
      summary: "Deletes a customers address"
      description: "Delete the customer address"
      operationId: "deleteAddress"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userID"
        in: "path"
        description: "To find restaurant"
        required: true
        type: "integer"
        format: "int64"
      - name: "addressID"
        in: "path"
        description: "To find address"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Customer address deleted"
        404:
          description: "Address not found"
        405:
          description: "Action is not allowed"
  /customer/{userID}/restaurant/{restaurantID}/order:
    post:
      tags:
      - "doordash"
      - "customer"
      summary: "create an order"
      description: "Create an order, by passing in restaurant ID, and contents of\
        \ the cart\n"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "cart"
        required: false
        schema:
          $ref: "#/definitions/cart"
      - name: "restaurantID"
        in: "path"
        description: "Id of the restaurant"
        required: true
        type: "integer"
        format: "int64"
      - name: "userID"
        in: "path"
        description: "User ID"
        required: true
        type: "integer"
        format: "int64"
      - name: "tip"
        in: "query"
        description: "tip"
        required: true
        type: "integer"
        format: "int64"
      responses:
        201:
          description: "Order created"
        404:
          description: "invalid input, object invalid"
        409:
          description: "an existing order already exists"
  /customer/{userID}/restaurant/{restaurantID}/menu:
    get:
      tags:
      - "customer"
      - "doordash"
      description: "Gets a restaurants menu\n"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "restaurant ID"
        required: true
        type: "integer"
        format: "int64"
      - name: "userID"
        in: "path"
        description: "User ID"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/menu"
        404:
          description: "Menu not found"
  /doordash/restaurant{restaurantID}:
    get:
      tags:
      - "doordash"
      summary: "Gets the full information orders for a restauraunt, in a given time\
        \ frame"
      description: "By passing in the restaurant Id you can get a list of all active/pending\
        \ orders\n"
      operationId: "searchForAllOrders"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "ID of the restaurant"
        required: true
        type: "integer"
        default: 12
        format: "int64"
      - name: "dateFrom"
        in: "query"
        description: "the date+time to pull orders from"
        required: true
        type: "string"
        format: "date-time"
      - name: "dateTO"
        in: "query"
        description: "the date+time to pull orders to"
        required: true
        type: "string"
        format: "date-time"
      responses:
        200:
          description: "Search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/order"
        400:
          description: "bad input parameter"
        405:
          description: "Method not allowed"
    put:
      tags:
      - "admin"
      - "doordash"
      summary: "updates restaurant information/ status/ is deleted - restaurants should\
        \ not be able to update their info without doordash review - for now"
      description: "update the saved restaurant information"
      operationId: "updateRestauraunt"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "To find restaurant"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "item updated"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/restaurant"
        404:
          description: "Order not found"
        405:
          description: "Action is not allowed"
    delete:
      tags:
      - "admin"
      summary: "Deletes restaurant"
      description: "Delete the restaurant object"
      operationId: "deleteRestaurant"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "restaurantID"
        in: "path"
        description: "To find restaurant"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Restaurant deleted"
        404:
          description: "Restaurant not found"
        405:
          description: "Action is not allowed"
  /doordash/customer{customerID}:
    delete:
      tags:
      - "admin"
      summary: "Deletes customer"
      description: "Delete the customer object"
      operationId: "deleteCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "customerID"
        in: "path"
        description: "To find customer"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Customer deleted"
        404:
          description: "Customer not found"
        405:
          description: "Action is not allowed"
definitions:
  customer:
    required:
    - "customerName"
    properties:
      customerName:
        type: "string"
        example: "ACME Corporation"
      phone:
        type: "string"
        example: "408-867-5309"
      creditCard:
        type: "string"
        example: "1234-5678-9101-1121"
      activeAddress:
        $ref: "#/definitions/address"
      addressess:
        type: "array"
        items:
          $ref: "#/definitions/address"
      hasActiveOrder:
        type: "boolean"
        example: true
      status:
        type: "string"
        example: "active"
      isDeleted:
        type: "boolean"
        example: false
    example:
      activeAddress:
        zip: 92123
        country: "US"
        city: "San Diego"
        street: "street b"
        bldgNum: 400
        latitude: 123
        id: 125125
        status: "Active"
        longitude: 123
      isDeleted: false
      phone: "408-867-5309"
      hasActiveOrder: true
      creditCard: "1234-5678-9101-1121"
      customerName: "ACME Corporation"
      addressess:
      - zip: 92123
        country: "US"
        city: "San Diego"
        street: "street b"
        bldgNum: 400
        latitude: 123
        id: 125125
        status: "Active"
        longitude: 123
      - zip: 92123
        country: "US"
        city: "San Diego"
        street: "street b"
        bldgNum: 400
        latitude: 123
        id: 125125
        status: "Active"
        longitude: 123
      status: "active"
  menuItem:
    required:
    - "description"
    - "id"
    - "itemName"
    - "price"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      itemName:
        type: "string"
        example: "eggplant delight"
      price:
        type: "integer"
        format: "int64"
        example: "12.93"
      description:
        type: "string"
        example: "iz actually pretty good"
      status:
        type: "string"
        example: "Available"
      image:
        type: "string"
        example: "a link to an image"
      isDeleted:
        type: "boolean"
        default: false
    example:
      image: "a link to an image"
      itemName: "eggplant delight"
      isDeleted: false
      price: "12.93"
      description: "iz actually pretty good"
      id: 1
      status: "Available"
  menu:
    required:
    - "menuItemList"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 125125
      Status:
        type: "string"
        example: "Active"
      menuItemList:
        type: "array"
        items:
          $ref: "#/definitions/menuItem"
    example:
      Status: "Active"
      menuItemList:
      - image: "a link to an image"
        itemName: "eggplant delight"
        isDeleted: false
        price: "12.93"
        description: "iz actually pretty good"
        id: 1
        status: "Available"
      - image: "a link to an image"
        itemName: "eggplant delight"
        isDeleted: false
        price: "12.93"
        description: "iz actually pretty good"
        id: 1
        status: "Available"
      id: 125125
  cart:
    required:
    - "currentCart"
    - "tip"
    properties:
      cartId:
        type: "integer"
        example: 1001
      tax:
        type: "integer"
        format: "int64"
        example: "0.09"
      cartSubtotal:
        type: "integer"
        example: 150
      tip:
        type: "integer"
        example: 0
      total:
        type: "integer"
      currentCart:
        type: "array"
        items:
          $ref: "#/definitions/menuItem"
    example:
      total: 0
      cartId: 1001
      currentCart:
      - image: "a link to an image"
        itemName: "eggplant delight"
        isDeleted: false
        price: "12.93"
        description: "iz actually pretty good"
        id: 1
        status: "Available"
      - image: "a link to an image"
        itemName: "eggplant delight"
        isDeleted: false
        price: "12.93"
        description: "iz actually pretty good"
        id: 1
        status: "Available"
      cartSubtotal: 150
      tax: "0.09"
      tip: 0
  restaurant:
    required:
    - "address"
    - "cuisine"
    - "hours"
    - "phone"
    - "restaurantName"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      restaurantName:
        type: "string"
        example: "ACME Corporation"
      phone:
        type: "string"
        example: "408-867-5309"
      address:
        $ref: "#/definitions/address"
      menu:
        $ref: "#/definitions/menu"
      status:
        type: "string"
        example: "open"
      cuisine:
        type: "string"
        example: "Thai"
      hours:
        type: "array"
        items:
          $ref: "#/definitions/restaurant_hours"
      isDeleted:
        type: "boolean"
        default: false
    example:
      hours:
      - closeTime: 2200
        openTime: 800
        day: "any day that ends with y"
      - closeTime: 2200
        openTime: 800
        day: "any day that ends with y"
      address:
        zip: 92123
        country: "US"
        city: "San Diego"
        street: "street b"
        bldgNum: 400
        latitude: 123
        id: 125125
        status: "Active"
        longitude: 123
      isDeleted: false
      restaurantName: "ACME Corporation"
      phone: "408-867-5309"
      cuisine: "Thai"
      id: 1
      menu:
        Status: "Active"
        menuItemList:
        - image: "a link to an image"
          itemName: "eggplant delight"
          isDeleted: false
          price: "12.93"
          description: "iz actually pretty good"
          id: 1
          status: "Available"
        - image: "a link to an image"
          itemName: "eggplant delight"
          isDeleted: false
          price: "12.93"
          description: "iz actually pretty good"
          id: 1
          status: "Available"
        id: 125125
      status: "open"
  order:
    required:
    - "commission"
    - "customer"
    - "products"
    - "restaurant"
    - "subTotal"
    properties:
      customer:
        $ref: "#/definitions/customer"
      restaurant:
        $ref: "#/definitions/restaurant"
      DateOrdered:
        type: "string"
        format: "date-time"
      products:
        $ref: "#/definitions/cart"
      id:
        type: "integer"
        format: "int64"
        example: 123
      status:
        type: "string"
      subTotal:
        type: "integer"
        format: "int64"
        example: 123
      promotion:
        type: "integer"
        format: "int64"
        example: 0
      total:
        type: "integer"
        format: "int64"
        example: 123
      commission:
        type: "integer"
        format: "int64"
        example: 123
      driverTip:
        type: "integer"
        format: "int64"
        example: 0
      creditCardInfo:
        type: "string"
        example: "just pretend I put my card here"
    example:
      total: 123
      creditCardInfo: "just pretend I put my card here"
      restaurant:
        hours:
        - closeTime: 2200
          openTime: 800
          day: "any day that ends with y"
        - closeTime: 2200
          openTime: 800
          day: "any day that ends with y"
        address:
          zip: 92123
          country: "US"
          city: "San Diego"
          street: "street b"
          bldgNum: 400
          latitude: 123
          id: 125125
          status: "Active"
          longitude: 123
        isDeleted: false
        restaurantName: "ACME Corporation"
        phone: "408-867-5309"
        cuisine: "Thai"
        id: 1
        menu:
          Status: "Active"
          menuItemList:
          - image: "a link to an image"
            itemName: "eggplant delight"
            isDeleted: false
            price: "12.93"
            description: "iz actually pretty good"
            id: 1
            status: "Available"
          - image: "a link to an image"
            itemName: "eggplant delight"
            isDeleted: false
            price: "12.93"
            description: "iz actually pretty good"
            id: 1
            status: "Available"
          id: 125125
        status: "open"
      commission: 123
      id: 123
      subTotal: 123
      driverTip: 0
      DateOrdered: "2000-01-23T04:56:07.000+00:00"
      customer:
        activeAddress:
          zip: 92123
          country: "US"
          city: "San Diego"
          street: "street b"
          bldgNum: 400
          latitude: 123
          id: 125125
          status: "Active"
          longitude: 123
        isDeleted: false
        phone: "408-867-5309"
        hasActiveOrder: true
        creditCard: "1234-5678-9101-1121"
        customerName: "ACME Corporation"
        addressess:
        - zip: 92123
          country: "US"
          city: "San Diego"
          street: "street b"
          bldgNum: 400
          latitude: 123
          id: 125125
          status: "Active"
          longitude: 123
        - zip: 92123
          country: "US"
          city: "San Diego"
          street: "street b"
          bldgNum: 400
          latitude: 123
          id: 125125
          status: "Active"
          longitude: 123
        status: "active"
      products:
        total: 0
        cartId: 1001
        currentCart:
        - image: "a link to an image"
          itemName: "eggplant delight"
          isDeleted: false
          price: "12.93"
          description: "iz actually pretty good"
          id: 1
          status: "Available"
        - image: "a link to an image"
          itemName: "eggplant delight"
          isDeleted: false
          price: "12.93"
          description: "iz actually pretty good"
          id: 1
          status: "Available"
        cartSubtotal: 150
        tax: "0.09"
        tip: 0
      status: "status"
      promotion: 0
  orderRestaurant:
    required:
    - "commission"
    - "customerName"
    - "products"
    - "restaurantName"
    - "subTotal"
    properties:
      customerName:
        type: "string"
        example: "john doe"
      restaurantName:
        type: "string"
        example: "john doe"
      restaurantId:
        type: "integer"
        example: 14
      products:
        type: "array"
        items:
          type: "string"
          example: "chicken pad thai"
      orderId:
        type: "integer"
        format: "int64"
        example: 123
      status:
        type: "string"
      subTotal:
        type: "integer"
        format: "int64"
        example: 123
      total:
        type: "integer"
        format: "int64"
        example: 123
      commission:
        type: "integer"
        format: "int64"
        example: 123
    example:
      total: 123
      restaurantName: "john doe"
      orderId: 123
      commission: 123
      subTotal: 123
      restaurantId: 14
      customerName: "john doe"
      products:
      - "chicken pad thai"
      - "chicken pad thai"
      status: "status"
  address:
    required:
    - "city"
    - "country"
    - "street"
    - "zip"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 125125
      status:
        type: "string"
        example: "Active"
      street:
        type: "string"
        example: "street b"
      city:
        type: "string"
        example: "San Diego"
      zip:
        type: "integer"
        format: "int64"
        example: 92123
      country:
        type: "string"
        example: "US"
      bldgNum:
        type: "integer"
        example: 400
      latitude:
        type: "integer"
        format: "int64"
        example: 123
      longitude:
        type: "integer"
        format: "int64"
        example: 123
    example:
      zip: 92123
      country: "US"
      city: "San Diego"
      street: "street b"
      bldgNum: 400
      latitude: 123
      id: 125125
      status: "Active"
      longitude: 123
  restaurant_hours:
    properties:
      day:
        type: "string"
        example: "any day that ends with y"
      openTime:
        type: "integer"
        example: 800
      closeTime:
        type: "integer"
        example: 2200
    example:
      closeTime: 2200
      openTime: 800
      day: "any day that ends with y"
